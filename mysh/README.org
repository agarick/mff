* mysh

basic linux shell

- code structure ::
  - outline
    1. mysh starts: [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/main.c#L13][main()]]
    2. "mode" of the shell is determined: [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/main.c#L13][main()]], [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L565][opt()]], [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L445][loop()]]
    3. repl starts: [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L445][loop()]], [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L410][loop_body()]]
    4. input is read, variation depending on mode: [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L445][loop()]], [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L192][get()]]
    5. read input is parsed into tokens: [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L226][parse()]]
    6. tokens are evaluated: [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L309][eval()]]
    7. next iteration of repl is readied: [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L378][rinse()]]
  - *./(mff/mysh/)makefile*
    - first =cd mff/mysh=
    - build: =make=
    - build test: =make test=
    - clean: =make clean=
    - run: =./bin/mysh= or =make run=
    - test: =./bin/test=
  - *(mysh/src/)main.c* - main function as entry point into *mysh*
  - *(mysh/src/)test.c* - unit test implementations, and main function to run them
  - *(mysh/src/)mysh.h* - struct implementations and function declarations
  - *(mysh/src/)parse.c* - parsing and evaluating
  - *(mysh/src/)repl.c* - looping, initialising, and finalising
  - *(mysh/src/)util.c* - utility and helpers
  - *(mysh/)sample.mysh* - a sample non-interactive script, try with =./bin/mysh sample.mysh=

- miscellany ::
  - read: libedit used
  - style: no particular linter used
  - style: allman indent, 72 char width, spaces not tabs
  - testing: MinUnit "framework"
  - testing: coverage incomplete, partially failing on lab computers

- phase 1 requirements ::
  - due 13 jan 2019 (*[[https://github.com/agarick/mff/tree/nswi015_mysh_phase1/mysh][phase1 branch]]* frozen @ 13 jan 2019 [[https://github.com/agarick/mff/commit/5baf9218b5a2a9709ebd8f2e7ba0108518b465e9][5baf9218b5]])
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L358][honor PATH of parent shell]]
  - :-| [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L457][handle ^C to kill foreground process]] (requires 2 ^C's)
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L214][handle empty input lines]]
  - :-D impl. simple foreground execution: ([[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L226][parse()]], [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L309][eval()]])
  - :-D handle semicolon syntax: ([[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L242][syntactic check]], [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L266][parsing]])
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L218][impl. exit]]
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L209][handle ^D]]
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L126][impl. cd]]
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/main.c#L31][handle -c option mode]]
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L259][handle comments]]
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/main.c#L37][impl. non-interactive (ie. file) mode]]
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L28][yield return value of last command executed]]
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.h#L23][return value of unknown command is 127]]
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.h#L12][direct err/warn messages to stderr]]
  - :-( return value of signalled command is 128
  - :-D [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L97][show cwd in prompt]]
  - :-D do not use fopen() family functions: ([[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L504][read()]], [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L202][el_gets()]])
  - :-D do not use functions that [[https://github.com/agarick/mff/blob/nswi015_mysh_phase1/mysh/mysh.c#L350][fork()]] within
  - :-D should work on lab computers (but tests fail)
  - :-( check for mm issues using valgrind (libcursesw, libedit giving trouble)

- phase 1 post hoc ::
  - wip: handle ^C to kill foreground process
  - wip: return value of signalled command is 128
  - wip: check for mm issues using valgrind
  - :-D various issues (see github #2, #3, #9, #10, #11, #12)

- phase 2 requirements ::
  - due 30 jun 2019
  - :-D implement pipes
  - :-D pipes limited only by machine resources
  - :-D pipes can be separated by a semicolon
  - :-D wait for all commands in pipeline to finish before printing next prompt
  - :-D implement redirection: =>=, =<., =>>=
  - :-D whitespace not significant in redirection
  - :-D can assume redirection occurs always at the end (last file considered when redundant)
  - :-D redirection "after" piping
