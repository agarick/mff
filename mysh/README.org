* shell

*** mysh

basic linux shell. school project.

- code structure ::
  - outline
    1. mysh starts: main()
    1. "mode" of the shell is determined: main(), opt(), loop()
    1. repl starts: loop(), loop_body()
    1. input is read, variation depending on mode: loop(), get()
    1. read input is parsed into tokens: parse()
    1. tokens are evaluated: eval()
    1. next iteration of repl is readied: rinse()
  - *./(mff/mysh/)makefile*
    - first =cd mff/mysh=
    - build: =make=
    - build test: =make test=
    - clean: =make clean=
    - run: =./mysh= or =make run=
    - test: =./test=
  - *./(mff/mysh/)main.c* - main function as entry point into *mysh*
  - *./(mff/mysh/)test.c* - unit test implementations, and main function to run them
  - *./(mff/mysh/)mysh.c* - all function implementations, separated out to allow for the above two main functions
  - *./(mff/mysh/)mysh.h* - struct implementations and function declarations
  - *./(mff/mysh/)testscript.mysh* - a sample non-interactive script, try with =./mysh testscript.mysh=

- miscellany ::
  - read: libedit used
  - style: no particular linter used
  - style: allman indent, 72 char width, spaces not tabs
  - testing: MinUnit "framework"
  - testing: coverage incomplete, partially failing on lab computers

- phase 1 requirements ::
  - due 13 jan 2019
  - :-D honor PATH of parent shell
  - :-| handle ^C to kill foreground process (requires 2 ^C's)
  - :-D handle empty input lines
  - :-D impl. simple foreground execution: (parse(), eval())
  - :-D handle semicolon syntax: (syntactic check, parsing)
  - :-D impl. exit
  - :-D handle ^D
  - :-D impl. cd
  - :-D handle -c option mode
  - :-D handle comments
  - :-D impl. non-interactive (ie. file) mode
  - :-D yield return value of last command executed
  - :-D return value of unknown command is 127
  - :-D direct err/warn messages to stderr
  - :-( return value of signalled command is 128
  - :-D show cwd in prompt
  - :-D do not use fopen() family functions: (read(), el_gets())
  - :-D do not use functions that fork() within
  - :-D should work on lab computers (but tests fail)
  - :-( check for mm issues using valgrind (libcursesw, libedit giving trouble)

- phase 2 requirements ::
  - due 30 jun 2019
  - /WIP/
